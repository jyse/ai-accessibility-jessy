console.log("üöÄ AI Accessibility Extension content script loaded on:",window.location.href);class d{scanPage(){console.log("üîç Starting accessibility scan...");const t=[...this.checkFontSizes(),...this.checkContrast(),...this.checkClickTargets(),...this.checkAriaLabels()];return console.log(`üìä Found ${t.length} accessibility issues`),t}checkFontSizes(){const t=[];return document.querySelectorAll("p, span, div, a, button, h1, h2, h3, h4, h5, h6").forEach((e,i)=>{var r;const n=window.getComputedStyle(e),s=parseFloat(n.fontSize);s<14&&((r=e.textContent)!=null&&r.trim())&&t.push({type:"font-size",element:this.getElementSelector(e,i),description:`Text is too small (${s}px). Recommended minimum: 14px`,severity:s<12?"high":"medium",currentValue:`${s}px`,suggestedValue:"16px"})}),t}checkContrast(){const t=[];return document.querySelectorAll("p, span, div, a, button, h1, h2, h3, h4, h5, h6").forEach((e,i)=>{var r;const n=window.getComputedStyle(e),s=n.color;if(n.backgroundColor,s.includes("rgb(")&&((r=e.textContent)!=null&&r.trim())){const a=s.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);if(a){const[,u,h,g]=a.map(Number);(u+h+g)/3>160&&t.push({type:"contrast",element:this.getElementSelector(e,i),description:`Low contrast text detected. Current color: ${s}`,severity:"medium",currentValue:s,suggestedValue:"rgb(51, 51, 51)"})}}}),t}checkClickTargets(){const t=[];return document.querySelectorAll('button, a, input[type="button"], input[type="submit"], [onclick]').forEach((e,i)=>{const n=e.getBoundingClientRect(),s=44;(n.width<s||n.height<s)&&n.width>0&&n.height>0&&t.push({type:"click-target",element:this.getElementSelector(e,i),description:`Click target too small (${Math.round(n.width)}x${Math.round(n.height)}px). Recommended: ${s}x${s}px`,severity:"high",currentValue:`${Math.round(n.width)}x${Math.round(n.height)}px`,suggestedValue:`${s}x${s}px`})}),t}checkAriaLabels(){const t=[];return document.querySelectorAll('button, input, select, textarea, [role="button"]').forEach((e,i)=>{var s;e.getAttribute("aria-label")||e.getAttribute("aria-labelledby")||((s=e.textContent)==null?void 0:s.trim())||e.placeholder||t.push({type:"aria-label",element:this.getElementSelector(e,i),description:"Interactive element missing accessible label",severity:"medium",currentValue:"No label",suggestedValue:"Add aria-label or text content"})}),t}getElementSelector(t,c){if(t.id)return`#${t.id}`;if(t.className&&typeof t.className=="string"){const e=t.className.split(" ").filter(i=>i.length>0);if(e.length>0)return`${t.tagName.toLowerCase()}.${e[0]}`}return`${t.tagName.toLowerCase()}:nth-of-type(${c+1})`}injectCSS(t){console.log("üíâ Injecting CSS fixes:",t);const c=document.getElementById("ai-accessibility-fixes");c&&c.remove();const e=document.createElement("style");e.id="ai-accessibility-fixes",e.textContent=t,document.head.appendChild(e),console.log("‚úÖ CSS fixes applied successfully")}}const l=new d;chrome.runtime.onMessage.addListener((o,t,c)=>{switch(console.log("üì® Content script received message:",o),o.action){case"scanPage":try{const e=l.scanPage();c({success:!0,issues:e})}catch(e){console.error("‚ùå Error scanning page:",e),c({success:!1,error:e.message})}break;case"applyFixes":try{l.injectCSS(o.css),c({success:!0})}catch(e){console.error("‚ùå Error applying fixes:",e),c({success:!1,error:e.message})}break;case"ping":c({success:!0,message:"Content script is active"});break;default:console.warn("‚ö†Ô∏è Unknown message action:",o.action),c({success:!1,error:"Unknown action"})}return!0});console.log("‚úÖ AI Accessibility content script ready and listening for messages");
